From 08ccfd6c48035d7b619597482cf0403d548c698b Mon Sep 17 00:00:00 2001
From: michaedw in build chroot <build@ctbu-bld5.cisco.com>
Date: Wed, 9 Mar 2011 08:05:06 +0000
Subject: [PATCH 2044/2070] local-no-SOCK_NONBLOCK.patch

---
 nscd/connections.c |    9 ++++++++-
 resolv/res_send.c  |   12 ++++++++++--
 2 files changed, 18 insertions(+), 3 deletions(-)

diff --git a/nscd/connections.c b/nscd/connections.c
index 69f6533..8a8c8f4 100644
--- a/nscd/connections.c
+++ b/nscd/connections.c
@@ -1834,6 +1834,7 @@ main_loop_poll (void)
 	      /* We have a new incoming connection.  Accept the connection.  */
 	      int fd;
 
+#ifdef SOCK_NONBLOCK
 #ifndef __ASSUME_ACCEPT4
 	      fd = -1;
 	      if (have_accept4 >= 0)
@@ -1850,6 +1851,9 @@ main_loop_poll (void)
 	      if (have_accept4 < 0)
 		fd = TEMP_FAILURE_RETRY (accept (sock, NULL, NULL));
 #endif
+#else
+		fd = TEMP_FAILURE_RETRY (accept (sock, NULL, NULL));
+#endif
 
 	      /* Use the descriptor if we have not reached the limit.  */
 	      if (fd >= 0)
@@ -2039,7 +2043,7 @@ main_loop_epoll (int efd)
 	  {
 	    /* A new connection.  */
 	    int fd;
-
+#ifdef SOCK_NONBLOCK
 # ifndef __ASSUME_ACCEPT4
 	    fd = -1;
 	    if (have_accept4 >= 0)
@@ -2056,6 +2060,9 @@ main_loop_epoll (int efd)
 	    if (have_accept4 < 0)
 	      fd = TEMP_FAILURE_RETRY (accept (sock, NULL, NULL));
 # endif
+#else
+	    fd = TEMP_FAILURE_RETRY (accept (sock, NULL, NULL));
+#endif
 
 	    /* Use the descriptor if we have not reached the limit.  */
 	    if (fd >= 0)
diff --git a/resolv/res_send.c b/resolv/res_send.c
index 845b658..7cec049 100644
--- a/resolv/res_send.c
+++ b/resolv/res_send.c
@@ -103,13 +103,13 @@ static const char rcsid[] = "$BINDId: res_send.c,v 8.38 2000/03/30 20:16:51 vixi
 #define MAXPACKET       65536
 #endif
 
-
+#ifdef SOCK_NONBLOCK
 #ifndef __ASSUME_SOCK_CLOEXEC
 static int __have_o_nonblock;
 #else
 # define __have_o_nonblock 0
 #endif
-
+#endif
 
 /* From ev_streams.c.  */
 
@@ -917,6 +917,7 @@ reopen (res_state statp, int *terrno, int ns)
 
 		/* only try IPv6 if IPv6 NS and if not failed before */
 		if (nsap->sa_family == AF_INET6 && !statp->ipv6_unavail) {
+#ifdef SOCK_NONBLOCK
 			if (__builtin_expect (__have_o_nonblock >= 0, 1)) {
 				EXT(statp).nssocks[ns] =
 				  socket(PF_INET6, SOCK_DGRAM|SOCK_NONBLOCK,
@@ -929,12 +930,14 @@ reopen (res_state statp, int *terrno, int ns)
 #endif
 			}
 			if (__builtin_expect (__have_o_nonblock < 0, 0))
+#endif
 				EXT(statp).nssocks[ns] =
 				  socket(PF_INET6, SOCK_DGRAM, 0);
 			if (EXT(statp).nssocks[ns] < 0)
 			    statp->ipv6_unavail = errno == EAFNOSUPPORT;
 			slen = sizeof (struct sockaddr_in6);
 		} else if (nsap->sa_family == AF_INET) {
+#ifdef SOCK_NONBLOCK
 			if (__builtin_expect (__have_o_nonblock >= 0, 1)) {
 				EXT(statp).nssocks[ns]
 				  = socket(PF_INET, SOCK_DGRAM|SOCK_NONBLOCK,
@@ -947,6 +950,7 @@ reopen (res_state statp, int *terrno, int ns)
 #endif
 			}
 			if (__builtin_expect (__have_o_nonblock < 0, 0))
+#endif
 				EXT(statp).nssocks[ns]
 				  = socket(PF_INET, SOCK_DGRAM, 0);
 			slen = sizeof (struct sockaddr_in);
@@ -973,7 +977,11 @@ reopen (res_state statp, int *terrno, int ns)
 			__res_iclose(statp, false);
 			return (0);
 		}
+#ifdef SOCK_NONBLOCK
 		if (__builtin_expect (__have_o_nonblock < 0, 0)) {
+#else
+                {
+#endif
 			/* Make socket non-blocking.  */
 			int fl = __fcntl (EXT(statp).nssocks[ns], F_GETFL);
 			if  (fl != -1)
-- 
1.7.0.4

